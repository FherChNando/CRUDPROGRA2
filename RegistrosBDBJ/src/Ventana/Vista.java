/*

 */
package Ventana;

//import config.Conexion;
import Registros.Conexion;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;

import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTextField;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

public class Vista extends javax.swing.JFrame {
    Conexion con=new Conexion();
    Connection cn;
    Statement st;
    ResultSet rs;
    DefaultTableModel modelo;
    int codigo;
    

    public Vista() {
        initComponents();
        listar();

    }
    private static final int columnaCodigo = 0;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txt_codigo = new javax.swing.JTextField();
        txt_nombre = new javax.swing.JTextField();
        txt_precio = new javax.swing.JTextField();
        txt_cantidad = new javax.swing.JTextField();
        txt_talla = new javax.swing.JTextField();
        txt_marca = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        boton_registrar = new javax.swing.JButton();
        boton_eliminar = new javax.swing.JButton();
        boton_modificar = new javax.swing.JButton();
        boton_nuevo = new javax.swing.JButton();
        boton_PDF = new javax.swing.JButton();
        boton_buscar = new javax.swing.JButton();
        txt_buscar = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(51, 102, 255));
        setLocation(new java.awt.Point(350, 0));

        jPanel1.setBackground(new java.awt.Color(209, 224, 239));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "DATOS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 3, 14), new java.awt.Color(0, 0, 102))); // NOI18N
        jPanel1.setForeground(new java.awt.Color(0, 0, 153));
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel2.setText("Codigo del producto:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel3.setText("Nombre del producto:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel4.setText("Cantidad:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel5.setText("Precio Unitario:");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel6.setText("Marca:");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel7.setText("Talla:");

        txt_codigo.setBackground(new java.awt.Color(221, 226, 232));

        txt_nombre.setBackground(new java.awt.Color(221, 226, 232));

        txt_precio.setBackground(new java.awt.Color(221, 226, 232));

        txt_cantidad.setBackground(new java.awt.Color(221, 226, 232));

        txt_talla.setBackground(new java.awt.Color(221, 226, 232));

        txt_marca.setBackground(new java.awt.Color(221, 226, 232));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addGap(67, 67, 67)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_talla, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_precio, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_codigo, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_marca, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_codigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txt_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txt_cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txt_precio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txt_marca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txt_talla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jLabel1.setFont(new java.awt.Font("Stencil", 2, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 204));
        jLabel1.setText("JARED BOUTIQUEÂ´S");

        jPanel2.setBackground(new java.awt.Color(196, 213, 232));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ACCIONES", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 3, 14), new java.awt.Color(0, 0, 153))); // NOI18N
        jPanel2.setFont(new java.awt.Font("Arial", 3, 14)); // NOI18N

        boton_registrar.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        boton_registrar.setText("Registrar");
        boton_registrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_registrarActionPerformed(evt);
            }
        });

        boton_eliminar.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        boton_eliminar.setText("Eliminar");
        boton_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_eliminarActionPerformed(evt);
            }
        });

        boton_modificar.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        boton_modificar.setText("Modificar");
        boton_modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_modificarActionPerformed(evt);
            }
        });

        boton_nuevo.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        boton_nuevo.setText("Nuevo");
        boton_nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_nuevoActionPerformed(evt);
            }
        });

        boton_PDF.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        boton_PDF.setText("Exportar PDF");
        boton_PDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_PDFActionPerformed(evt);
            }
        });

        boton_buscar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        boton_buscar.setText("Buscar");
        boton_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_buscarActionPerformed(evt);
            }
        });

        txt_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_buscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(boton_registrar, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(boton_PDF, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(boton_modificar, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                    .addComponent(boton_buscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(boton_eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(boton_nuevo, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE))
                    .addComponent(txt_buscar))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(boton_registrar)
                    .addComponent(boton_modificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(boton_eliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(boton_nuevo))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(boton_PDF)
                    .addComponent(boton_buscar)
                    .addComponent(txt_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );

        jPanel3.setBackground(new java.awt.Color(198, 215, 233));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "TABLA DE PRODUCTOS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 3, 14), new java.awt.Color(0, 0, 153))); // NOI18N

        tabla1.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        tabla1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Producto", "Cantidad", "Precio", "Marca", "Tallas"
            }
        ));
        tabla1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla1);
        if (tabla1.getColumnModel().getColumnCount() > 0) {
            tabla1.getColumnModel().getColumn(5).setMinWidth(50);
            tabla1.getColumnModel().getColumn(5).setPreferredWidth(50);
            tabla1.getColumnModel().getColumn(5).setMaxWidth(50);
        }

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 6, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(141, 141, 141))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void boton_registrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_registrarActionPerformed
        Agregar();
        nuevo();
        listar();
    }//GEN-LAST:event_boton_registrarActionPerformed

    private void tabla1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla1MouseClicked
        int fila=tabla1.getSelectedRow();
        if(fila==-1){
            JOptionPane.showMessageDialog(null, "Usuario no seleccionado");
        }else{  
            int codigo = Integer.parseInt(tabla1.getValueAt(fila, 0).toString());
            String nombre = tabla1.getValueAt(fila, 1).toString();
            int cantidad = Integer.parseInt(tabla1.getValueAt(fila, 2).toString());
            float precio = Float.parseFloat(tabla1.getValueAt(fila, 3).toString());
            String marca = tabla1.getValueAt(fila, 4).toString();
            String talla = tabla1.getValueAt(fila, 5).toString();
            txt_codigo.setText(Integer.toString(codigo)); // Debe convertirse a String
            txt_nombre.setText(nombre);
            txt_cantidad.setText(Integer.toString(cantidad)); // Debe convertirse a String
            txt_precio.setText(Float.toString(precio)); // Debe convertirse a String
            txt_marca.setText(marca);
            txt_talla.setText(talla);
        }
    }//GEN-LAST:event_tabla1MouseClicked

    private void boton_modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_modificarActionPerformed
        modificar();
        nuevo();
        listar();
    }//GEN-LAST:event_boton_modificarActionPerformed

    private void boton_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_eliminarActionPerformed
        eliminar();
        nuevo();
        listar(); 
    }//GEN-LAST:event_boton_eliminarActionPerformed

    private void boton_nuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_nuevoActionPerformed
        nuevo();        // TODO add your handling code here:
    }//GEN-LAST:event_boton_nuevoActionPerformed

    private void boton_PDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_PDFActionPerformed
        try {
            crearpdf();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_boton_PDFActionPerformed

    private void boton_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_buscarActionPerformed
         buscar();


    }//GEN-LAST:event_boton_buscarActionPerformed

    private void txt_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_buscarActionPerformed
        txt_buscar.addKeyListener(new java.awt.event.KeyAdapter() {
    @Override
    public void keyReleased(java.awt.event.KeyEvent evt) {
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
            // Llama a tu funciÃ³n de bÃºsqueda cuando se presiona la tecla Enter
            buscar();
        } else {
            // Llama a tu funciÃ³n de bÃºsqueda en tiempo real con cada liberaciÃ³n de tecla
            buscarEnTiempoReal();
        }
    }
});


    }//GEN-LAST:event_txt_buscarActionPerformed

    public Vista(JTextField txt_buscar) {
        this.txt_buscar = txt_buscar;
    }

    
    void modificar() {
    String codigo = txt_codigo.getText();
    String nombre = txt_nombre.getText();
    String cantidad = txt_cantidad.getText();
    String precio = txt_precio.getText();
    String marca = txt_marca.getText();
    String talla = txt_talla.getText();
    
    // Verifica si los campos obligatorios estÃ¡n vacÃ­os
    if (codigo.isEmpty() || nombre.isEmpty() || cantidad.isEmpty() || precio.isEmpty() || marca.isEmpty() || talla.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Debe ingresar datos en todos los campos");
    } else {
        try {
            // Construye la consulta SQL para actualizar el producto
            String sql = "UPDATE product SET NombreProducto='" + nombre + "', Cantidad=" + cantidad + ", PrecioUnitario=" + precio + ", Marca='" + marca + "', Tallas='" + talla + "' WHERE CodigoProducto=" + codigo;
            
            cn = con.getConnection();
            st = cn.createStatement();
            int filasActualizadas = st.executeUpdate(sql);
            
            if (filasActualizadas > 0) {
                JOptionPane.showMessageDialog(null, "Producto Actualizado");
                limpiartabla();
                listar();
            } else {
                JOptionPane.showMessageDialog(null, "No se encontrÃ³ el producto con el cÃ³digo proporcionado");
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error al actualizar el producto: " + e.getMessage());
        } finally {
            // Cierra los recursos
            try {
                if (st != null) st.close();
                if (cn != null) cn.close();
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }
    }
}
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        String jdbcUrl;
        jdbcUrl = "jdbc:mysql://localhost:3306/registros_bdj";

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Vista().setVisible(true);
            }
        });
    }
    
    void listar(){
        String sql="select * from product";
        try {
            cn=con.getConnection();
            st=cn.createStatement();
            rs=st.executeQuery(sql);
            Object[]product=new Object[6];
            modelo=(DefaultTableModel)tabla1.getModel();
            while (rs.next()){
                product[0]=rs.getInt("CodigoProducto");
                product[1]=rs.getString("NombreProducto");
                product[2]=rs.getInt("Cantidad");
                product[3]=rs.getFloat("PrecioUnitario");
                product[4]=rs.getString("Marca");
                product[5]=rs.getString("Tallas");
                modelo.addRow(product);  
            }
            tabla1.setModel(modelo);
        }catch (Exception e) {

        }
    }
    
    void Agregar() {
//    try {
        int codigo = Integer.parseInt(txt_codigo.getText());
        //String codigo = txt_codigo.getText();
        String nombre = txt_nombre.getText();
        int cantidad = Integer.parseInt(txt_cantidad.getText());
        //String cantidad = txt_cantidad.getText();
        float precio = Float.parseFloat(txt_precio.getText());
        //String precio = txt_precio.getText();
        String marca = txt_marca.getText();
        String talla = txt_talla.getText();

        if (codigo == 0 || nombre.isEmpty() || cantidad == 0 || precio == 0.0 || marca.isEmpty() || talla.isEmpty()) {
        //if(codigo.equals("")||nombre.equals("")||cantidad.equals("")||precio.equals("")||marca.equals("")||talla.equals("")){
            JOptionPane.showMessageDialog(null, "Campos vacÃ­os o invÃ¡lidos");
        } else {
            String sql="insert into product(CodigoProducto,NombreProducto,Cantidad,PrecioUnitario,Marca,Tallas)values('"+codigo+"','"+nombre+"','"+cantidad+"','"+precio+"','"+marca+"','"+talla+"')";
            try {
                cn=con.getConnection();
                st=cn.createStatement();
                st.executeUpdate(sql);
                JOptionPane.showMessageDialog(null, "Producto Agregado");
                limpiartabla();
            }catch (Exception e){
            }
        }
    }
    
    
    void limpiartabla() {
        int rowCount = tabla1.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
        modelo.removeRow(i);
        }
    }
    
    
    void eliminar() {
    int filaSeleccionada = tabla1.getSelectedRow();
    
    if (filaSeleccionada == -1) {
        JOptionPane.showMessageDialog(null, "Debe seleccionar una fila");
        return; // Salir del mÃ©todo si no se selecciona una fila
    }

    try {
        int codigo = Integer.parseInt(tabla1.getValueAt(filaSeleccionada, columnaCodigo).toString());
        String sql = "DELETE FROM product WHERE CodigoProducto = ?";
        
        cn = con.getConnection();
        PreparedStatement pstmt = cn.prepareStatement(sql);
        pstmt.setInt(1, codigo);
        
        int resultado = pstmt.executeUpdate();
        
        if (resultado > 0) {
            JOptionPane.showMessageDialog(null, "El registro fue eliminado con Ã©xito");
            limpiartabla();
//            listar(); // AsegÃºrate de llamar a la funciÃ³n listar para actualizar la tabla
        } else {
            JOptionPane.showMessageDialog(null, "No se pudo eliminar el registro");
        }
        
        pstmt.close();
    } catch (Exception e) {
        e.printStackTrace(); // Imprimir la traza de la excepciÃ³n para depurar
    }
}
    
void nuevo(){
    txt_codigo.setText("");
    txt_nombre.setText("");
    txt_cantidad.setText("");
    txt_precio.setText("");
    txt_marca.setText("");
    txt_talla.setText("");
    txt_buscar.setText("");
    txt_codigo.requestFocus();
}

void crearpdf() throws FileNotFoundException{
    
    // Crea un nuevo documento PDF
Document document = new Document();

try {
    // Especifica la ubicaciÃ³n del archivo PDF de salida
    PdfWriter.getInstance(document, new FileOutputStream("C:\\Users\\chatf\\OneDrive\\Escritorio\\Informe.pdf"));
    
    // Abre el documento para editar
    document.open();
    
    // Agrega contenido al PDF (puedes personalizar esta parte)
    document.add(new Paragraph("Informe PDF generado desde Java"));
    document.add(new Paragraph("Datos recuperados de la base de datos:"));
    document.add(new Paragraph(" "));
    document.add(new Paragraph(" "));
 
    try {
    // Establece la conexiÃ³n a la base de datos MySQL (asegÃºrate de proporcionar tus propios valores de conexiÃ³n)
    cn = con.getConnection();
    
    // Consulta SQL para recuperar datos de la tabla de empleados
    String sql = "SELECT CodigoProducto, NombreProducto, Cantidad, PrecioUnitario, Marca, Tallas FROM Product";

    // Prepara la declaraciÃ³n SQL
    PreparedStatement statement = cn.prepareStatement(sql);

    // Ejecuta la consulta y obtiene el resultado
    ResultSet resultSet = statement.executeQuery();

    // Crear una tabla en el informe PDF
    PdfPTable table = new PdfPTable(6); // 6 columnas para los 6 campos
    table.setWidthPercentage(100); // Ancho de tabla al 100% del documento

    // Agrega encabezados de columna a la tabla
    String[] headers = {"CÃ³digo", "Nombre", "Cantidad", "Precio U.", "Marca", "Tallas"};
    for (String header : headers) {
        PdfPCell cell = new PdfPCell(new Phrase(header));
        cell.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(cell);
    }

    // Agrega los datos de la base de datos a la tabla
    while (resultSet.next()) {
        int codigo = resultSet.getInt("CodigoProducto");
        String nombre = resultSet.getString("NombreProducto");
        int cantidad = resultSet.getInt("Cantidad");
        double precio = resultSet.getDouble("PrecioUnitario");
        String marca = resultSet.getString("Marca");
        String talla = resultSet.getString("Tallas");

        table.addCell(String.valueOf(codigo));
        table.addCell(nombre);
        table.addCell(String.valueOf(cantidad));
        table.addCell(String.valueOf(precio));
        table.addCell(marca);
        table.addCell(talla);
    }

    // Agrega la tabla al documento PDF
    document.add(table);

    // Cierra los recursos de base de datos
    resultSet.close();
    statement.close();
    cn.close();
    
} catch (SQLException e) {
    e.printStackTrace();
    JOptionPane.showMessageDialog(null, "Error al recuperar datos de la base de datos.");
}

// Cierra el documento
document.close(); 

// DODIGO 

    // Notifica al usuario que el informe se ha generado correctamente
    JOptionPane.showMessageDialog(null, "Informe PDF generado con Ã©xito.");

} catch (DocumentException | IOException e) {
    e.printStackTrace();
    JOptionPane.showMessageDialog(null, "Error al generar el informe PDF.");
}
}

void buscarEnTiempoReal() {

    String textoBusqueda = txt_buscar.getText(); // Obtener el texto ingresado por el usuario

    // Crear un nuevo modelo de tabla para la bÃºsqueda actual
    DefaultTableModel model = new DefaultTableModel();
    model.addColumn("Codigo");
    model.addColumn("Nombre");
    model.addColumn("Cantidad");
    model.addColumn("Precio U.");
    model.addColumn("Marca");
    model.addColumn("Tallas");

    // Realizar la bÃºsqueda en la base de datos solo si el texto de bÃºsqueda no estÃ¡ vacÃ­o
    if (!textoBusqueda.isEmpty()) {
        try {
            // Connection conn = TuClaseConexion.getConexion(); // Reemplaza TuClaseConexion por la clase que maneja la conexiÃ³n a la base de datos
            cn = con.getConnection();   
            
            // Query SQL para buscar por nombre o cÃ³digo (ajusta segÃºn tu esquema de base de datos)
            String sql = "SELECT * FROM Product WHERE NombreProducto LIKE ? OR CodigoProducto = ?";

            // Prepara la declaraciÃ³n SQL
            PreparedStatement statement = cn.prepareStatement(sql);
            statement.setString(1, "%" + textoBusqueda + "%"); // AÃ±ade '%' para buscar coincidencias parciales
            statement.setString(2, textoBusqueda);

            // Ejecuta la consulta y obtiene el resultado
            ResultSet resultSet = statement.executeQuery();

            // Llena el nuevo modelo con los resultados
            while (resultSet.next()) {
                // Tienes las columnas: Codigo, Nombre, Cantidad, PrecioUnitario, Marca, Tallas
                int codigo = resultSet.getInt("CodigoProducto");
                String nombre = resultSet.getString("NombreProducto");
                int cantidad = resultSet.getInt("Cantidad");
                float precio = resultSet.getFloat("PrecioUnitario");
                String marca = resultSet.getString("Marca");
                String talla = resultSet.getString("Tallas");

                // Agregar una fila al nuevo modelo
                model.addRow(new Object[]{codigo, nombre, cantidad, precio, marca, talla});
            }

            // Cierra los recursos de base de datos
            resultSet.close();
            statement.close();
            cn.close();
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error en la bÃºsqueda.");
        }
    }

    // Asigna el nuevo modelo a la tabla
    tabla1.setModel(model);
    
}

void buscar(){
    String textoBusqueda = txt_buscar.getText(); // Obtener el texto ingresado por el usuario

    // Crear un nuevo modelo de tabla para la bÃºsqueda actual
    DefaultTableModel model = new DefaultTableModel();
    model.addColumn("Codigo");
    model.addColumn("Nombre");
    model.addColumn("Cantidad");
    model.addColumn("Precio U.");
    model.addColumn("Marca");
    model.addColumn("Tallas");

    // Realizar la bÃºsqueda en la base de datos solo si el texto de bÃºsqueda no estÃ¡ vacÃ­o
    if (!textoBusqueda.isEmpty()) {
        try {
            // Connection conn = TuClaseConexion.getConexion(); // Reemplaza TuClaseConexion por la clase que maneja la conexiÃ³n a la base de datos
            cn = con.getConnection();   
            
            // Query SQL para buscar por nombre o cÃ³digo (ajusta segÃºn tu esquema de base de datos)
            String sql = "SELECT * FROM Product WHERE NombreProducto LIKE ? OR CodigoProducto = ?";

            // Prepara la declaraciÃ³n SQL
            PreparedStatement statement = cn.prepareStatement(sql);
            statement.setString(1, "%" + textoBusqueda + "%"); // AÃ±ade '%' para buscar coincidencias parciales
            statement.setString(2, textoBusqueda);

            // Ejecuta la consulta y obtiene el resultado
            ResultSet resultSet = statement.executeQuery();

            // Llena el nuevo modelo con los resultados
            while (resultSet.next()) {
                // Tienes las columnas: Codigo, Nombre, Cantidad, PrecioUnitario, Marca, Tallas
                int codigo = resultSet.getInt("CodigoProducto");
                String nombre = resultSet.getString("NombreProducto");
                int cantidad = resultSet.getInt("Cantidad");
                float precio = resultSet.getFloat("PrecioUnitario");
                String marca = resultSet.getString("Marca");
                String talla = resultSet.getString("Tallas");

                // Agregar una fila al nuevo modelo
                model.addRow(new Object[]{codigo, nombre, cantidad, precio, marca, talla});
            }

            // Cierra los recursos de base de datos
            resultSet.close();
            statement.close();
            cn.close();
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error en la bÃºsqueda.");
        }
    }

    // Asigna el nuevo modelo a la tabla
    tabla1.setModel(model);
}


    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton boton_PDF;
    private javax.swing.JButton boton_buscar;
    private javax.swing.JButton boton_eliminar;
    private javax.swing.JButton boton_modificar;
    private javax.swing.JButton boton_nuevo;
    private javax.swing.JButton boton_registrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabla1;
    private javax.swing.JTextField txt_buscar;
    private javax.swing.JTextField txt_cantidad;
    private javax.swing.JTextField txt_codigo;
    private javax.swing.JTextField txt_marca;
    private javax.swing.JTextField txt_nombre;
    private javax.swing.JTextField txt_precio;
    private javax.swing.JTextField txt_talla;
    // End of variables declaration//GEN-END:variables

}